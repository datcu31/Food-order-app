{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Food-order-app\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useInput from \"../../Hooks/use-input\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = props => {\n  _s();\n  const isNotEmpty = value => value.trim() !== \"\";\n  const {\n    value: enteredName,\n    isValide: enteredNameIsValide,\n    hasError: nameInputHasError,\n    valueInputChangeHandler: nameInputChangeHandler,\n    valueInputBlurHandler: nameInputBlurHandler,\n    reset: resetNameInput\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredStreet,\n    isValide: enteredStreetIsValide,\n    hasError: streetInputHasError,\n    valueInputChangeHandler: streetInputChangeHandler,\n    valueInputBlurHandler: streetInputBlurHandler,\n    reset: resetStreetInput\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredPostalCode,\n    isValide: enteredPostalCodeIsValide,\n    hasError: postalCodeInputHasError,\n    valueInputChangeHandler: postalCodeInputChangeHandler,\n    valueInputBlurHandler: postalCodeInputBlurHandler,\n    reset: resetPostalCodeInput\n  } = useInput(value => value.trim().length === 5);\n  let formIsValide = false;\n  if (enteredNameIsValide && enteredStreetIsValide && enteredPostalCode) {\n    formIsValide = true;\n  }\n  const confirmHandler = event => {\n    event.preventDefault();\n    if (!formIsValide) {\n      return;\n    }\n    resetNameInput();\n    resetStreetInput();\n    resetPostalCodeInput();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valide name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        onChange: streetInputChangeHandler,\n        onBlur: streetInputBlurHandler,\n        value: enteredStreet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), streetInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valide street.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        onChange: postalCodeInputChangeHandler,\n        onBlur: postalCodeInputBlurHandler,\n        value: enteredPostalCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), postalCodeInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valide postal code (5 characters).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Checkout, \"4JmGno6iZQhcTG+qpBuuSGj581Y=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["React","useInput","classes","Checkout","props","isNotEmpty","value","trim","enteredName","isValide","enteredNameIsValide","hasError","nameInputHasError","valueInputChangeHandler","nameInputChangeHandler","valueInputBlurHandler","nameInputBlurHandler","reset","resetNameInput","enteredStreet","enteredStreetIsValide","streetInputHasError","streetInputChangeHandler","streetInputBlurHandler","resetStreetInput","enteredPostalCode","enteredPostalCodeIsValide","postalCodeInputHasError","postalCodeInputChangeHandler","postalCodeInputBlurHandler","resetPostalCodeInput","length","formIsValide","confirmHandler","event","preventDefault","form","control","actions","onCancel","submit"],"sources":["C:/React/Food-order-app/src/components/Cart/Checkout.js"],"sourcesContent":["import React from \"react\";\r\nimport useInput from \"../../Hooks/use-input\";\r\n\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst Checkout = (props) => {\r\n    const isNotEmpty = value => value.trim() !== \"\";\r\n    \r\n    const {\r\n        value:enteredName,\r\n        isValide: enteredNameIsValide,\r\n        hasError: nameInputHasError,\r\n        valueInputChangeHandler: nameInputChangeHandler,\r\n        valueInputBlurHandler: nameInputBlurHandler,\r\n        reset: resetNameInput\r\n    } = useInput(isNotEmpty)\r\n\r\n    const {\r\n        value:enteredStreet,\r\n        isValide: enteredStreetIsValide,\r\n        hasError: streetInputHasError,\r\n        valueInputChangeHandler: streetInputChangeHandler,\r\n        valueInputBlurHandler: streetInputBlurHandler,\r\n        reset: resetStreetInput\r\n    } = useInput(isNotEmpty)\r\n\r\n    const {\r\n        value:enteredPostalCode,\r\n        isValide: enteredPostalCodeIsValide,\r\n        hasError: postalCodeInputHasError,\r\n        valueInputChangeHandler: postalCodeInputChangeHandler,\r\n        valueInputBlurHandler: postalCodeInputBlurHandler,\r\n        reset: resetPostalCodeInput\r\n    } = useInput(value => value.trim().length === 5)\r\n\r\n    let formIsValide = false;\r\n\r\n    if(enteredNameIsValide && enteredStreetIsValide && enteredPostalCode){\r\n        formIsValide = true;\r\n    }\r\n\r\n    const confirmHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(!formIsValide){\r\n            return;\r\n        }\r\n\r\n        resetNameInput();\r\n        resetStreetInput();\r\n        resetPostalCodeInput();\r\n    }\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={confirmHandler}>\r\n            <div className={classes.control}>\r\n                <label htmlFor=\"name\">Your name:</label>\r\n                <input \r\n                type='text' \r\n                id=\"name\" \r\n                onChange={nameInputChangeHandler}\r\n                onBlur={nameInputBlurHandler}\r\n                value={enteredName}\r\n                />\r\n                {nameInputHasError && <p>Please enter a valide name.</p>}\r\n            </div>\r\n            <div className={classes.control}>\r\n                <label htmlFor=\"street\">Street:</label>\r\n                <input \r\n                type='text' \r\n                id=\"street\"\r\n                onChange={streetInputChangeHandler}\r\n                onBlur={streetInputBlurHandler}\r\n                value={enteredStreet} \r\n                />\r\n                {streetInputHasError && <p>Please enter a valide street.</p>}\r\n            </div>\r\n            <div className={classes.control}>\r\n                <label htmlFor=\"postal\">Postal code:</label>\r\n                <input \r\n                type='text' \r\n                id=\"postal\" \r\n                onChange={postalCodeInputChangeHandler}\r\n                onBlur={postalCodeInputBlurHandler}\r\n                value={enteredPostalCode}\r\n                />\r\n                {postalCodeInputHasError && <p>Please enter a valide postal code (5 characters).</p>}\r\n            </div>\r\n            <div className={classes.control}>\r\n                <label htmlFor=\"city\">City:</label>\r\n                <input type='text' id=\"city\" />\r\n            </div>\r\n            <div className={classes.actions}>\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button className={classes.submit}>Confirm</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Checkout;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}