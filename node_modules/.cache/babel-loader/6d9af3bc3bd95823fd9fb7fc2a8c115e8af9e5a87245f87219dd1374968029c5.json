{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Food-order-app\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updateItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updateItems = [...state.items];\n      updateItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updateItems = state.items.concat(action.item);\n    }\n    return {\n      items: updateItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n    let updateItems;\n    if (existingCartItem.amount === 1) {\n      updateItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount - 1\n      };\n      updateItems = [...state.items];\n      updateItems[existingCartItemIndex] = updatedItem;\n    }\n    return {\n      items: updateItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  ;\n  if (action.type === \"CLEAR\") {\n    return defaultCartState;\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const clearCartHandler = () => {\n    dispatchCartAction({\n      type: 'CLEAR'\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    clearCart: clearCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updateItems","updatedItem","concat","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","clearCartHandler","cartContext","addItem","removeItem","clearCart","children"],"sources":["C:/React/Food-order-app/src/store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    if (action.type === 'ADD') {\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) => item.id === action.item.id\r\n        );\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n        let updateItems;\r\n\r\n        if (existingCartItem) {\r\n            const updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount + action.item.amount\r\n            }\r\n            updateItems = [...state.items];\r\n            updateItems[existingCartItemIndex] = updatedItem;\r\n        } else {\r\n            updateItems = state.items.concat(action.item);\r\n        }\r\n\r\n        return {\r\n            items: updateItems,\r\n            totalAmount: updatedTotalAmount\r\n        };\r\n    }\r\n\r\n    if (action.type === \"REMOVE\") {\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) => item.id === action.id\r\n        );\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        const updatedTotalAmount = state.totalAmount - existingCartItem.price;\r\n\r\n        let updateItems;\r\n\r\n\r\n        if (existingCartItem.amount === 1) {\r\n            updateItems = state.items.filter((item) => item.id !== action.id)\r\n        } else {\r\n            const updatedItem = { ...existingCartItem, amount: existingCartItem.amount - 1 };\r\n            updateItems = [...state.items];\r\n            updateItems[existingCartItemIndex] = updatedItem;\r\n        }\r\n\r\n        return {\r\n            items: updateItems,\r\n            totalAmount: updatedTotalAmount\r\n        }\r\n    };\r\n\r\n    if (action.type === \"CLEAR\") {\r\n        return defaultCartState;\r\n    }\r\n\r\n    return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({ type: 'ADD', item: item })\r\n    };\r\n\r\n    const removeItemFromCartHandler = (id) => {\r\n        dispatchCartAction({ type: 'REMOVE', id: id })\r\n    };\r\n\r\n    const clearCartHandler = () => { \r\n        dispatchCartAction({ type: 'CLEAR'})\r\n    };\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler,\r\n        clearCart: clearCartHandler\r\n    }\r\n\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}